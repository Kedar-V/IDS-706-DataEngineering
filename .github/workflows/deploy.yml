name: Build & Deploy to EC2 via Docker Hub

on: [push, pull_request]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: kedarvaidya05/bitcoin-app:latest

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |

            if [ ! -d "/home/ec2-user/app" ]; then
                echo "Creating /home/ec2-user/app..."
                mkdir -p /home/ec2-user/app
                chown ec2-user:ec2-user /home/ec2-user/app
            else
                echo "/home/ec2-user/app already exists, skipping creation."
            fi

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo yum install -y git || sudo apt-get install -y git
      
            cd /home/ec2-user/app
      
            if [ -d ".git" ]; then
              echo "Repo exists, pulling latest changes..."
              git reset --hard
              git clean -fd
              git pull
            else
              echo "Cleaning directory and cloning repo..."
              # sudo rm -rf /home/ec2-user/app/*
              git clone https://github.com/Kedar-V/IDS-706-DataEngineering.git .
            fi

      - name: Start containers on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ec2-user/app
            docker-compose pull
            docker-compose down
            docker-compose up -d


      - name: Run startup.sh inside container
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker exec -i python_week4 bash -c "chmod +x /app/startup/startup.sh && nohup /app/startup/startup.sh > /app/startup/startup.log 2>&1 &"
